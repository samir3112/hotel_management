apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotel-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hotel-app
  template:
    metadata:
      labels:
        app: hotel-app
    spec:
      containers:
      - name: hotel-container
        image: samir3112/hotel-management:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_NAME
          value: "hotel_db"
        - name: DB_USER
          value: "root"
        - name: DB_PASSWORD
          value: "root"




# kubectl apply -f configmap.yaml
# kubectl apply -f mysql.yaml
# kubectl apply -f deployment.yaml
# kubectl apply -f service.yaml

# kubectl get pods

# Enter in mysql container
# kubectl exec -it $(kubectl get pods -l app=mysql -o jsonpath="{.items[0].metadata.name}") -- bash

# mysql -u root -p  ( Log into mysql)

# Delete all resources
# kubectl delete deployment hotel-app
# kubectl delete service hotel-service

# kubectl delete deployment mysql
# kubectl delete service mysql-service

# kubectl delete pvc mysql-pvc
# kubectl delete pv mysql-pv

# kubectl delete configmap mysql-initdb-config
# sudo rm -rf /mnt/data/mysql/*
